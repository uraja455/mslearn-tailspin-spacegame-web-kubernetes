trigger:
 - 'main'

variables:
  buildConfiguration: 'Release'
  leaderboardRepository: 'leaderboard'
  webRepository: 'web'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'secret'

stages:
- stage: 'Build'
  displayName: 'Build and push'
  jobs:  
  - job: 'Build'
    displayName: 'Build job'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Docker@2
      displayName: 'Build and push the image to container registry'
      inputs:
        command: buildAndPush
        buildContext: $(Build.Repository.LocalPath)
        repository: $(webRepository)
        dockerfile: '$(Build.SourcesDirectory)/Tailspin.SpaceGame.Web/Dockerfile'
        containerRegistry: 'ACRSC'
        tags: |
          $(tag)

    - task: Docker@2
      displayName: 
      inputs:
          command: buildAndPush
          buildContext: $(Build.Repository.LocalPath)
          repository: $(leaderboardRepository)
          dockerfile: '$(Build.SourcesDirectory)/Tailspin.SpaceGame.LeaderboardContainer/Dockerfile'
          containerRegistry: 'ACRSC'
          tags: |
            $(tag)

    - publish: '$(Build.SourcesDirectory)/manifests'
      artifact: manifests
   

- stage: 'Deploy'
  displayName: 'Deploy the containers'
  dependsOn: Build
  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: 'ubuntu-latest'
    environment: 'spike.default'
    variables:
    - group: Release
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: manifests
          
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
                action: createSecret
                secretName: $(imagePullSecret)
                dockerRegistryEndpoint: 'ACRSC'
                kubernetesServiceConnection: 'AKSSC'
                namespace: 'default'
        
          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
                action: deploy
                kubernetesServiceConnection: 'AKSSC'
                namespace: 'default'
                manifests: |
                  $(Pipeline.Workspace)/manifests/deployment.yml
                  $(Pipeline.Workspace)/manifests/service.yml
                imagePullSecrets: |
                  $(imagePullSecret)
                containers: |
                    $(RegistryName)/$(webRepository):$(tag)
                    $(RegistryName)/$(leaderboardRepository):$(tag)  